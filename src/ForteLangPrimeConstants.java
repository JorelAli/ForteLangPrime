/* Generated By:JavaCC: Do not edit this line. ForteLangPrimeConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ForteLangPrimeConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int OPENBRACKET = 1;
  /** RegularExpression Id. */
  int CLOSEBRACKET = 2;
  /** RegularExpression Id. */
  int OPENCBRACE = 3;
  /** RegularExpression Id. */
  int CLOSECBRACE = 4;
  /** RegularExpression Id. */
  int OPENSBRACKET = 5;
  /** RegularExpression Id. */
  int CLOSESBRACKET = 6;
  /** RegularExpression Id. */
  int COLON = 7;
  /** RegularExpression Id. */
  int SEMICOLON = 8;
  /** RegularExpression Id. */
  int ARROW = 9;
  /** RegularExpression Id. */
  int COMMA = 10;
  /** RegularExpression Id. */
  int FAT_ARROW = 11;
  /** RegularExpression Id. */
  int DOUBLE_ARROW = 12;
  /** RegularExpression Id. */
  int PLAY_BUTTON = 13;
  /** RegularExpression Id. */
  int AT = 14;
  /** RegularExpression Id. */
  int GUARD = 15;
  /** RegularExpression Id. */
  int PIPE = 16;
  /** RegularExpression Id. */
  int EQUALS = 17;
  /** RegularExpression Id. */
  int LCHEVRON = 18;
  /** RegularExpression Id. */
  int RCHEVRON = 19;
  /** RegularExpression Id. */
  int CONCAT = 20;
  /** RegularExpression Id. */
  int PLUS = 21;
  /** RegularExpression Id. */
  int ROUGHLY_EQUALS = 22;
  /** RegularExpression Id. */
  int NUM = 23;
  /** RegularExpression Id. */
  int INT = 24;
  /** RegularExpression Id. */
  int BOOL = 25;
  /** RegularExpression Id. */
  int STRING = 26;
  /** RegularExpression Id. */
  int TRUE = 27;
  /** RegularExpression Id. */
  int FALSE = 28;
  /** RegularExpression Id. */
  int IF = 29;
  /** RegularExpression Id. */
  int THEN = 30;
  /** RegularExpression Id. */
  int ELSE = 31;
  /** RegularExpression Id. */
  int LIBRARY = 32;
  /** RegularExpression Id. */
  int IMPORT = 33;
  /** RegularExpression Id. */
  int EXPORT = 34;
  /** RegularExpression Id. */
  int AS = 35;
  /** RegularExpression Id. */
  int PRAGMA = 36;
  /** RegularExpression Id. */
  int VAR_NAME = 37;
  /** RegularExpression Id. */
  int NUMBER = 38;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\":\"",
    "\";\"",
    "\"->\"",
    "\",\"",
    "\"=>\"",
    "\"->>\"",
    "\"|>\"",
    "\"@\"",
    "\"?:\"",
    "\"|\"",
    "\"=\"",
    "\"<\"",
    "\">\"",
    "\"++\"",
    "\"+\"",
    "\"~=\"",
    "\"Num\"",
    "\"Num@Int\"",
    "\"Bool\"",
    "\"String\"",
    "\"true\"",
    "\"false\"",
    "\"if\"",
    "\"then\"",
    "\"else\"",
    "\"Library\"",
    "\"import\"",
    "\"export\"",
    "\"as\"",
    "<PRAGMA>",
    "<VAR_NAME>",
    "<NUMBER>",
    "\"\\n\"",
    "\"\\r\"",
    "\" \"",
    "\"\\t\"",
    "\"...\"",
  };

}
