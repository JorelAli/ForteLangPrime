/* Generated By:JavaCC: Do not edit this line. ForteLangPrimeParserConstants.java */
package dev.jorel.fortelangprime.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ForteLangPrimeParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int OPENBRACKET = 1;
  /** RegularExpression Id. */
  int CLOSEBRACKET = 2;
  /** RegularExpression Id. */
  int OPENCBRACE = 3;
  /** RegularExpression Id. */
  int CLOSECBRACE = 4;
  /** RegularExpression Id. */
  int OPENSBRACKET = 5;
  /** RegularExpression Id. */
  int CLOSESBRACKET = 6;
  /** RegularExpression Id. */
  int COLON = 7;
  /** RegularExpression Id. */
  int SEMICOLON = 8;
  /** RegularExpression Id. */
  int ARROW = 9;
  /** RegularExpression Id. */
  int COMMA = 10;
  /** RegularExpression Id. */
  int FAT_ARROW = 11;
  /** RegularExpression Id. */
  int DOUBLE_ARROW = 12;
  /** RegularExpression Id. */
  int PLAY_BUTTON = 13;
  /** RegularExpression Id. */
  int REVERSE_PLAY_BUTTON = 14;
  /** RegularExpression Id. */
  int GUARD = 15;
  /** RegularExpression Id. */
  int PIPE = 16;
  /** RegularExpression Id. */
  int EQUALS = 17;
  /** RegularExpression Id. */
  int LCHEVRON = 18;
  /** RegularExpression Id. */
  int RCHEVRON = 19;
  /** RegularExpression Id. */
  int STAR = 20;
  /** RegularExpression Id. */
  int PRINTABLE = 21;
  /** RegularExpression Id. */
  int EQUATABLE = 22;
  /** RegularExpression Id. */
  int CONCAT = 23;
  /** RegularExpression Id. */
  int PLUS = 24;
  /** RegularExpression Id. */
  int MINUS = 25;
  /** RegularExpression Id. */
  int SLASH = 26;
  /** RegularExpression Id. */
  int HAT = 27;
  /** RegularExpression Id. */
  int MOD = 28;
  /** RegularExpression Id. */
  int LESS_THAN_OR_EQUAL = 29;
  /** RegularExpression Id. */
  int GREATER_THAN_OR_EQUAL = 30;
  /** RegularExpression Id. */
  int EQUALS_EQUALS = 31;
  /** RegularExpression Id. */
  int NOT_EQUALS = 32;
  /** RegularExpression Id. */
  int AND_AND = 33;
  /** RegularExpression Id. */
  int OR_OR = 34;
  /** RegularExpression Id. */
  int TYPE_INT = 35;
  /** RegularExpression Id. */
  int TYPE_BOOL = 36;
  /** RegularExpression Id. */
  int TYPE_STRING = 37;
  /** RegularExpression Id. */
  int TYPE = 38;
  /** RegularExpression Id. */
  int IF = 39;
  /** RegularExpression Id. */
  int THEN = 40;
  /** RegularExpression Id. */
  int ELSE = 41;
  /** RegularExpression Id. */
  int INFIX = 42;
  /** RegularExpression Id. */
  int INFIXL = 43;
  /** RegularExpression Id. */
  int INFIXR = 44;
  /** RegularExpression Id. */
  int TRUE = 45;
  /** RegularExpression Id. */
  int FALSE = 46;
  /** RegularExpression Id. */
  int PANIC = 47;
  /** RegularExpression Id. */
  int LIBRARY = 48;
  /** RegularExpression Id. */
  int SCRIPT = 49;
  /** RegularExpression Id. */
  int EXPORT = 50;
  /** RegularExpression Id. */
  int IMPORT = 51;
  /** RegularExpression Id. */
  int AS = 52;
  /** RegularExpression Id. */
  int VAR_NAME = 53;
  /** RegularExpression Id. */
  int INT_LITERAL = 54;
  /** RegularExpression Id. */
  int NUMBER = 55;
  /** RegularExpression Id. */
  int STRING = 56;
  /** RegularExpression Id. */
  int CUSTOM_OPERATOR = 57;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int InsideMLC = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\":\"",
    "\";\"",
    "\"->\"",
    "\",\"",
    "\"=>\"",
    "\"->>\"",
    "\"|>\"",
    "\"<|\"",
    "\"?:\"",
    "\"|\"",
    "\"=\"",
    "\"<\"",
    "\">\"",
    "\"*\"",
    "\"@Printable\"",
    "\"@Equatable\"",
    "\"++\"",
    "\"+\"",
    "\"-\"",
    "\"/\"",
    "\"^\"",
    "\"%\"",
    "\"<=\"",
    "\">=\"",
    "\"==\"",
    "\"!=\"",
    "\"&&\"",
    "\"||\"",
    "\"Int\"",
    "\"Bool\"",
    "\"String\"",
    "\"type\"",
    "\"if\"",
    "\"then\"",
    "\"else\"",
    "\"infix\"",
    "\"infixl\"",
    "\"infixr\"",
    "\"true\"",
    "\"false\"",
    "\"panic\"",
    "\"Library\"",
    "\"Script\"",
    "\"export\"",
    "\"import\"",
    "\"as\"",
    "<VAR_NAME>",
    "<INT_LITERAL>",
    "<NUMBER>",
    "<STRING>",
    "<CUSTOM_OPERATOR>",
    "\"\\n\"",
    "\"\\r\"",
    "\" \"",
    "\"\\t\"",
    "\"\\f\"",
    "<token of kind 63>",
    "\"#[\"",
    "\"#[\"",
    "\"]#\"",
    "<token of kind 67>",
  };

}
